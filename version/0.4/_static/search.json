[
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.save_project",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.save_project.html#save_project",
        "title": "save_project",
        "section": "save_project",
        "text": "Save the project.\nThis method uses the properties to get the project path. This method is launched in a thread.\nPath of the AEDT project. The default value is None, in which\ncase the current file is overwritten.\nRelease PyAEDT object. The default value is True.\nReturns True if the connection is successful, False otherwise."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw a conical horn antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.substrate_height",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.substrate_height.html#substrate_height",
        "title": "substrate_height",
        "section": "substrate_height",
        "text": "Substrate height."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.wait_to_be_idle",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.wait_to_be_idle.html#wait_to_be_idle",
        "title": "wait_to_be_idle",
        "section": "wait_to_be_idle",
        "text": "Wait for the thread to be idle and ready to accept a new task.\nTime out in seconds. The default is 60."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw a rectangular patch edge antenna inset fed.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.analyze",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.analyze.html#analyze",
        "title": "analyze",
        "section": "analyze",
        "text": "Analyze the design.\nLaunch analysis in batch. AEDT is released once it is opened.\nTrue when successful, False when failed."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.html#pyramidalridged",
        "title": "PyramidalRidged",
        "section": "PyramidalRidged",
        "text": "Manages a pyramidal ridged horn antenna.\nThis class is accessible through the app hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nPyramidal ridged horn object.\nC. Balanis, “Aperture Antennas: Analysis, Design, and Applications,”\nModern Antenna Handbook, New York, 2008.\nPyramidalRidged.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nPyramidalRidged.create_lattice_pair([...])\nCreate a lattice pair box.\nPyramidalRidged.duplicate_along_line(vector)\nDuplicate the object along a line.\nPyramidalRidged.init_model()\nCreate a radiation boundary.\nPyramidalRidged.model_disco()\nModel in PyDiscovery.\nPyramidalRidged.model_hfss()\nDraw conical horn antenna.\nPyramidalRidged.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nPyramidalRidged.setup_disco()\nSet up model in PyDiscovery.\nPyramidalRidged.setup_hfss()\nSet up an antenna in HFSS.\nPyramidalRidged.synthesis()\nAntenna synthesis.\nPyramidalRidged.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nPyramidalRidged.antenna_type\n\nPyramidalRidged.coordinate_system\nReference coordinate system.\nPyramidalRidged.frequency\nCenter frequency.\nPyramidalRidged.frequency_unit\nFrequency units.\nPyramidalRidged.length_unit\nLength unit.\nPyramidalRidged.material\nHorn material.\nPyramidalRidged.material_properties\nSubstrate material properties.\nPyramidalRidged.name\nAntenna name.\nPyramidalRidged.origin\nAntenna origin.\nPyramidalRidged.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up the model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "toolkit/models/conical_spiral",
        "href": "toolkit/models/conical_spiral.html#conical-spiral",
        "title": "Conical spiral",
        "section": "Conical spiral",
        "text": "This page lists the classes available for conical spiral antennas:\nArchimedean(*args, **kwargs)\nManages conical archimedeal spiral antenna.\nYou must use these methods from PyAEDT as shown in this example:\nfrom ansys.aedt.core import Hfss\n\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral import (\n    Archimedean,\n)\n\naedtapp = Hfss()\n\n# Create antenna\noantenna1 = RectangularPatchProbe(app)\noantenna1.frequency = 12.0\noantenna1.model_hfss()\noantenna1.setup_hfss()\n...\naedtapp.release_desktop()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.html#bowtierounded",
        "title": "BowTieRounded",
        "section": "BowTieRounded",
        "text": "Manages a bowtie rounded antenna.\nThis class is accessible through the Hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nSubstrate material. If a material is not defined, a new\nmaterial, parametrized, is defined.\nThe default is \"FR4_epoxy\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nSubstrate height. The default is 1.575.\nWhether to create a parametrized antenna. The default is True.\nPatch antenna object.\nC. Balanis, “Wideband and Travelling-Wave Antennas,”\nModern Antenna Handbook, New York, 2008.\nBowTieRounded.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nBowTieRounded.create_lattice_pair([...])\nCreate a lattice pair box.\nBowTieRounded.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nBowTieRounded.init_model()\nCreate a radiation boundary.\nBowTieRounded.model_disco()\nModel in PyDiscovery.\nBowTieRounded.model_hfss()\nDraw a bowtie rounded antenna.\nBowTieRounded.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nBowTieRounded.setup_disco()\nSet up the model in PyDiscovery.\nBowTieRounded.setup_hfss()\nSet up an antenna in HFSS.\nBowTieRounded.synthesis()\nAntenna synthesis.\nBowTieRounded.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nBowTieRounded.antenna_type\n\nBowTieRounded.coordinate_system\nReference coordinate system.\nBowTieRounded.frequency\nCenter frequency.\nBowTieRounded.frequency_unit\nFrequency units.\nBowTieRounded.length_unit\nLength unit.\nBowTieRounded.material\nSubstrate material.\nBowTieRounded.material_properties\nSubstrate material properties.\nBowTieRounded.name\nAntenna name.\nBowTieRounded.origin\nAntenna origin.\nBowTieRounded.outer_boundary\nOuter boundary.\nBowTieRounded.substrate_height\nSubstrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_antenna",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_antenna.html#get_antenna",
        "title": "get_antenna",
        "section": "get_antenna",
        "text": "Synthesize and create an antenna in HFSS.\nType of antenna to create.\nWhether to only synthesize the anttena. The default is False.\nTrue when successful, False when failed."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.html#hplane",
        "title": "HPlane",
        "section": "HPlane",
        "text": "Manages an H plane horn antenna.\nThis class is accessible through the app hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nH plane horn object.\nC. Balanis, “Aperture Antennas: Analysis, Design, and Applications,”\nModern Antenna Handbook, New York, 2008.\nHPlane.create_3dcomponent([component_file, ...])\nCreate a 3D component of the antenna.\nHPlane.create_lattice_pair([lattice_height, ...])\nCreate a lattice pair box.\nHPlane.duplicate_along_line(vector[, num_clones])\nDuplicate the object along a line.\nHPlane.init_model()\nCreate a radiation boundary.\nHPlane.model_disco()\nModel in PyDiscovery.\nHPlane.model_hfss()\nDraw H plane horn antenna.\nHPlane.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nHPlane.setup_disco()\nSet up model in PyDiscovery.\nHPlane.setup_hfss()\nSet up an antenna in HFSS.\nHPlane.synthesis()\nAntenna synthesis.\nHPlane.update_synthesis_parameters(new_params)\nUpdate the synthesis parameter from the antenna list.\nHPlane.antenna_type\n\nHPlane.coordinate_system\nReference coordinate system.\nHPlane.frequency\nCenter frequency.\nHPlane.frequency_unit\nFrequency units.\nHPlane.length_unit\nLength unit.\nHPlane.material\nHorn material.\nHPlane.material_properties\nSubstrate material properties.\nHPlane.name\nAntenna name.\nHPlane.origin\nAntenna origin.\nHPlane.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.substrate_height",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.substrate_height.html#substrate_height",
        "title": "substrate_height",
        "section": "substrate_height",
        "text": "Substrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up the model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.html#bowtieslot",
        "title": "BowTieSlot",
        "section": "BowTieSlot",
        "text": "Manages a bowtie slot antenna.\nThis class is accessible through the Hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nSubstrate material. If a material is not defined, a new\nmaterial, parametrized, is defined.\nThe default is \"FR4_epoxy\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nSubstrate height. The default is 0.1575.\nWhether to create a parametrized antenna. The default is True.\nBowtie antenna object.\nC. Balanis, “Wideband and Travelling-Wave Antennas,”\nModern Antenna Handbook, New York, 2008.\nBowTieSlot.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nBowTieSlot.create_lattice_pair([...])\nCreate a lattice pair box.\nBowTieSlot.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nBowTieSlot.init_model()\nCreate a radiation boundary.\nBowTieSlot.model_disco()\nModel in PyDiscovery.\nBowTieSlot.model_hfss()\nDraw a bowtie slot antenna.\nBowTieSlot.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nBowTieSlot.setup_disco()\nSet up the model in PyDiscovery.\nBowTieSlot.setup_hfss()\nSet up an antenna in HFSS.\nBowTieSlot.synthesis()\nAntenna synthesis.\nBowTieSlot.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nBowTieSlot.antenna_type\n\nBowTieSlot.coordinate_system\nReference coordinate system.\nBowTieSlot.frequency\nCenter frequency.\nBowTieSlot.frequency_unit\nFrequency units.\nBowTieSlot.length_unit\nLength unit.\nBowTieSlot.material\nSubstrate material.\nBowTieSlot.material_properties\nSubstrate material properties.\nBowTieSlot.name\nAntenna name.\nBowTieSlot.origin\nAntenna origin.\nBowTieSlot.outer_boundary\nOuter boundary.\nBowTieSlot.substrate_height\nSubstrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.html#toolkitbackend",
        "title": "ToolkitBackend",
        "section": "ToolkitBackend",
        "text": "Provides methods for controlling the toolkit workflow.\nThis class provides methods for creating an AEDT session, connecting to an existing\nAEDT session, and synthesizing and creating an antenna in HFSS.\nToolkitBackend.aedt_sessions()\nGet information for the active AEDT sessions.\nToolkitBackend.analyze()\nAnalyze the design.\nToolkitBackend.connect_aedt()\nConnect to an existing AEDT session.\nToolkitBackend.connect_design([app_name])\nConnect to an application design.\nToolkitBackend.export_aedt_model([obj_list, ...])\nExport the model in the OBJ format and then encode the file if the encode parameter is enabled.\nToolkitBackend.export_farfield([...])\nExport far field data and then encode the file if the encode parameter is enabled.\nToolkitBackend.get_antenna(antenna[, synth_only])\nSynthesize and create an antenna in HFSS.\nToolkitBackend.get_design_names()\nGet the design names for a specific project.\nToolkitBackend.get_project_name(project_path)\nGet the project name from the project path.\nToolkitBackend.get_properties()\nGet the toolkit properties.\nToolkitBackend.get_thread_status()\nGet the toolkit thread status.\nToolkitBackend.installed_aedt_version()\nGet the installed AEDT versions.\nToolkitBackend.is_aedt_connected()\nCheck if AEDT is connected.\nToolkitBackend.launch_aedt()\nLaunch AEDT.\nToolkitBackend.launch_thread(process)\nLaunch the thread.\nToolkitBackend.open_project([project_name])\nOpen an AEDT project.\nToolkitBackend.release_aedt([...])\nRelease AEDT.\nToolkitBackend.save_project([project_path, ...])\nSave the project.\nToolkitBackend.scattering_results()\nGet antenna scattering results.\nToolkitBackend.serialize_obj_base64(file_path)\nEncode a bytes-like object.\nToolkitBackend.set_properties(data)\nAssign the passed data to the internal data model.\nToolkitBackend.update_hfss_parameters(key, val)\nUpdate parameters in HFSS.\nToolkitBackend.wait_to_be_idle([timeout])\nWait for the thread to be idle and ready to accept a new task."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_thread_status",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_thread_status.html#get_thread_status",
        "title": "get_thread_status",
        "section": "get_thread_status",
        "text": "Get the toolkit thread status.\nTrue when active, False when inactive."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw a bowtie slot antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#contribute",
        "title": "Contribute",
        "section": "Contribute",
        "text": "Overall guidance on contributing to a PyAnsys repository appears in\nContributing\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyAEDT or its toolkits.\nThe following contribution information is specific to PyAEDT toolkits.\nTo clone and install the latest version of this toolkit in\ndevelopment mode, run:\nTBD\nUse the AEDT Antenna Toolkit Issues page\nto report bugs and request new features.\nDocumentation for the latest stable release is hosted at https://aedt.antenna.toolkit.docs.pyansys.com/.\nIn the upper right corner of the documentation’s title bar, there is an option for switching from viewing\nthe documentation for the latest stable release to viewing the documentation for the development version\nor previously released versions.\nPyAEDT toolkit is compliant with PyAnsys code style. It uses the tool\npre-commit to select the code style. You can install\nand activate this tool with:\nYou can also install this as a pre-commit hook with:\nThis way, it’s not possible for you to push code that fails the style checks.\nFor example:\nBest practice is to keep the length at or below 120 characters for code\nand comments. Lines longer than this might not display properly on some terminals\nand tools or might be difficult to follow.\ngit clone https://github.com/ansys/pyaedt-toolkits-antenna.git\ncd pyaedt-toolkits-antenna\npython -m pip install --upgrade pip\npip install -e .\npip install pre-commit\npre-commit run --all-files\npre-commit install\n$ pre-commit install\n$ git commit -am \"Add my cool feature.\"\nblack....................................................................Passed\nisort (python)...........................................................Passed\nflake8...................................................................Passed\ncodespell................................................................Passed\nfix requirements.txt.....................................................Passed\nblacken-docs.............................................................Passed"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#clone-the-repository",
        "title": "Contribute > Clone the repository",
        "section": "Clone the repository",
        "text": "To clone and install the latest version of this toolkit in\ndevelopment mode, run:\ngit clone https://github.com/ansys/pyaedt-toolkits-antenna.git\ncd pyaedt-toolkits-antenna\npython -m pip install --upgrade pip\npip install -e ."
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#add-new-antennas",
        "title": "Contribute > Add new antennas",
        "section": "Add new antennas",
        "text": "TBD"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#post-issues",
        "title": "Contribute > Post issues",
        "section": "Post issues",
        "text": "Use the AEDT Antenna Toolkit Issues page\nto report bugs and request new features."
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#view-documentation",
        "title": "Contribute > View documentation",
        "section": "View documentation",
        "text": "Documentation for the latest stable release is hosted at https://aedt.antenna.toolkit.docs.pyansys.com/.\nIn the upper right corner of the documentation’s title bar, there is an option for switching from viewing\nthe documentation for the latest stable release to viewing the documentation for the development version\nor previously released versions."
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#adhere-to-code-style",
        "title": "Contribute > Adhere to code style",
        "section": "Adhere to code style",
        "text": "PyAEDT toolkit is compliant with PyAnsys code style. It uses the tool\npre-commit to select the code style. You can install\nand activate this tool with:\nYou can also install this as a pre-commit hook with:\nThis way, it’s not possible for you to push code that fails the style checks.\nFor example:\nBest practice is to keep the length at or below 120 characters for code\nand comments. Lines longer than this might not display properly on some terminals\nand tools or might be difficult to follow.\npip install pre-commit\npre-commit run --all-files\npre-commit install\n$ pre-commit install\n$ git commit -am \"Add my cool feature.\"\nblack....................................................................Passed\nisort (python)...........................................................Passed\nflake8...................................................................Passed\ncodespell................................................................Passed\nfix requirements.txt.....................................................Passed\nblacken-docs.............................................................Passed"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#maximum-line-length",
        "title": "Contribute > Maximum line length",
        "section": "Maximum line length",
        "text": "Best practice is to keep the length at or below 120 characters for code\nand comments. Lines longer than this might not display properly on some terminals\nand tools or might be difficult to follow."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.launch_aedt",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.launch_aedt.html#launch_aedt",
        "title": "launch_aedt",
        "section": "launch_aedt",
        "text": "Launch AEDT.\nThis method is launched in a thread if gRPC is enabled. AEDT is released once it is opened.\nTrue when successful, False when failed."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.open_project",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.open_project.html#open_project",
        "title": "open_project",
        "section": "open_project",
        "text": "Open an AEDT project.\nFull path to the project.\nTrue when successful, False when failed."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/patch",
        "href": "toolkit/models/patch.html#patch",
        "title": "Patch",
        "section": "Patch",
        "text": "This page lists the classes available for patch antennas:\nRectangularPatchEdge(*args, **kwargs)\nManages a rectangular patch edge antenna.\nRectangularPatchProbe(*args, **kwargs)\nManages a rectangular patch antenna with a coaxial probe.\nRectangularPatchInset(*args, **kwargs)\nManages a rectangular patch antenna inset fed.\nYou must use these methods from PyAEDT as shown in this example:\nfrom ansys.aedt.core import Hfss\n\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.patch import (\n    RectangularPatchEdge,\n)\n\naedtapp = Hfss()\n\n# Create antenna\noantenna1 = RectangularPatchProbe(app)\noantenna1.frequency = 12.0\noantenna1.model_hfss()\noantenna1.setup_hfss()\n...\naedtapp.release_desktop()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up the model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw H plane horn antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.release_aedt",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.release_aedt.html#release_aedt",
        "title": "release_aedt",
        "section": "release_aedt",
        "text": "Release AEDT.\nWhether to close the AEDT projects that are open in the session.\nThe default is True.\nWhether to close the active AEDT session on exiting AEDT.\nThe default is True.\nTrue when successful, False when failed."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.substrate_height",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.substrate_height.html#substrate_height",
        "title": "substrate_height",
        "section": "substrate_height",
        "text": "Substrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.direction",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.direction.html#direction",
        "title": "direction",
        "section": "direction",
        "text": "Helix direction. 0 for left, and 1 for right."
    },
    {
        "objectID": "index",
        "href": "index.html#aedt-antenna-toolkit-documentation-041",
        "title": "AEDT Antenna Toolkit documentation 0.4.1",
        "section": "AEDT Antenna Toolkit documentation 0.4.1",
        "text": "Useful links:\nInstallation |\nSource repository |\nIssues\nThe AEDT Antenna Toolkit is a Python interface for accelerating antenna design\nusing Ansys Electronics Desktop\n(AEDT). You can launch this toolkit from AEDT or launch it directly\nfrom a Python console.\nLearn more about the AEDT Antenna Toolkit and how to install it.\nUnderstand how to use the Antenna toolkit wizard.\nUnderstand the APIs available for the AEDT Antenna Toolkit.\nExplore examples that show how to use the API.\nLearn how to contribute to the AEDT Antenna Toolkit codebase or documentation."
    },
    {
        "objectID": "index",
        "href": "index.html#indices-and-tables",
        "title": "AEDT Antenna Toolkit documentation 0.4.1 > Indices and tables",
        "section": "Indices and tables",
        "text": "genindex\nsearch"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw E plane horn antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/bowtie",
        "href": "toolkit/models/bowtie.html#bowtie",
        "title": "Bowtie",
        "section": "Bowtie",
        "text": "This page list the classes available for bowtie antennas:\nBowTieNormal(*args, **kwargs)\nManages a bowtie antenna.\nBowTieRounded(*args, **kwargs)\nManages a bowtie rounded antenna.\nBowTieSlot(*args, **kwargs)\nManages a bowtie slot antenna.\nYou must use these methods from PyAEDT as shown in this example:\nfrom ansys.aedt.core import Hfss\n\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie import BowTieNormal\n\naedtapp = Hfss()\n\n# Create antenna\noantenna1 = BowTieNormal(app)\noantenna1.frequency = 12.0\noantenna1.model_hfss()\noantenna1.setup_hfss()\n...\naedtapp.release_desktop()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.html#archimedean",
        "title": "Archimedean",
        "section": "Archimedean",
        "text": "Manages conical archimedeal spiral antenna.\nThis class is accessible through the app hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nConical archimedean spiral object.\nR. Johnson, “Frequency Independent Antennas,” Antenna Engineering Handbook,\n3rd ed. New York, McGraw-Hill, 1993.\nArchimedean.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nArchimedean.create_lattice_pair([...])\nCreate a lattice pair box.\nArchimedean.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nArchimedean.init_model()\nCreate a radiation boundary.\nArchimedean.model_disco()\nModel in PyDiscovery.\nArchimedean.model_hfss()\nDraw a conical archimidean spiral antenna.\nArchimedean.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nArchimedean.setup_disco()\nSet up in PyDiscovery.\nArchimedean.setup_hfss()\nSet up an antenna in HFSS.\nArchimedean.synthesis()\nAntenna synthesis.\nArchimedean.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nArchimedean.antenna_type\n\nArchimedean.coordinate_system\nReference coordinate system.\nArchimedean.frequency\nCentral frequency.\nArchimedean.frequency_unit\nFrequency units.\nArchimedean.length_unit\nLength unit.\nArchimedean.material\nHorn material.\nArchimedean.name\nAntenna name.\nArchimedean.origin\nAntenna origin.\nArchimedean.outer_boundary\nOuter boundary.\nArchimedean.start_frequency\nStart frequency.\nArchimedean.stop_frequency\nStop frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.html#rectangularpatchinset",
        "title": "RectangularPatchInset",
        "section": "RectangularPatchInset",
        "text": "Manages a rectangular patch antenna inset fed.\nThis class is accessible through the Hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nSubstrate material. If the material is not defined, a new\nmaterial, parametrized, is created. The default is \"FR4_epoxy\".\nBoundary type to use. The default is None. Options are\n\"FEBI\", \"PML\", \"Radiation\", and None.\nLength units. The default is \"mm\".\nSubstrate height. The default is 1.575.\nWhether to create a parametrized antenna. The default is True.\nPatch antenna object.\nBalanis, “Microstrip Antennas,” Antenna Theory, 2nd Ed. New York: Wiley, 1997.\nRectangularPatchInset.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nRectangularPatchInset.create_lattice_pair([...])\nCreate a lattice pair box.\nRectangularPatchInset.duplicate_along_line(vector)\nDuplicate the object along a line.\nRectangularPatchInset.init_model()\nCreate a radiation boundary.\nRectangularPatchInset.model_disco()\nModel in PyDiscovery.\nRectangularPatchInset.model_hfss()\nDraw a rectangular patch antenna inset fed.\nRectangularPatchInset.set_variables_in_hfss([...])\nCreate HFSS design variables.\nRectangularPatchInset.setup_disco()\nSet up the model in PyDiscovery.\nRectangularPatchInset.setup_hfss()\nSet up an antenna in HFSS.\nRectangularPatchInset.synthesis()\nAntenna synthesis.\nRectangularPatchInset.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nRectangularPatchInset.antenna_type\n\nRectangularPatchInset.coordinate_system\nReference coordinate system.\nRectangularPatchInset.frequency\nCenter frequency.\nRectangularPatchInset.frequency_unit\nFrequency units.\nRectangularPatchInset.length_unit\nLength unit.\nRectangularPatchInset.material\nSubstrate material.\nRectangularPatchInset.material_properties\nSubstrate material properties.\nRectangularPatchInset.name\nAntenna name.\nRectangularPatchInset.origin\nAntenna origin.\nRectangularPatchInset.outer_boundary\nOuter boundary.\nRectangularPatchInset.substrate_height\nSubstrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.is_aedt_connected",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.is_aedt_connected.html#is_aedt_connected",
        "title": "is_aedt_connected",
        "section": "is_aedt_connected",
        "text": "Check if AEDT is connected.\nTuple indicating the connection status and a message."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw conical horn antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw a bowtie rounded antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Substrate material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.TransmissionLine.stripline_calculator",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.TransmissionLine.stripline_calculator.html#stripline_calculator",
        "title": "stripline_calculator",
        "section": "stripline_calculator",
        "text": "Use the strip line calculator to calculate line width.\nSubstrate height.\nSubstrate permittivity.\nImpedance. The default is 50.0.\nLine width."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.html#corrugated",
        "title": "Corrugated",
        "section": "Corrugated",
        "text": "Manages a corrugated horn antenna.\nThis class is accessible through the app hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nCorrugated horn object.\nC. Balanis, “Horn Antennas,” Antenna Theory Analysis,\n3rd ed. Hoboken: Wiley, 2005, sec. 13.6, pp. 785-791.\nCorrugated.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nCorrugated.create_lattice_pair([...])\nCreate a lattice pair box.\nCorrugated.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nCorrugated.init_model()\nCreate a radiation boundary.\nCorrugated.model_disco()\nModel in PyDiscovery.\nCorrugated.model_hfss()\nDraw a conical horn antenna.\nCorrugated.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nCorrugated.setup_disco()\nSet up in PyDiscovery.\nCorrugated.setup_hfss()\nSet up an antenna in HFSS.\nCorrugated.synthesis()\nAntenna synthesis.\nCorrugated.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nCorrugated.antenna_type\n\nCorrugated.coordinate_system\nReference coordinate system.\nCorrugated.frequency\nCenter frequency.\nCorrugated.frequency_unit\nFrequency units.\nCorrugated.length_unit\nLength unit.\nCorrugated.material\nHorn material.\nCorrugated.material_properties\nSubstrate material properties.\nCorrugated.name\nAntenna name.\nCorrugated.origin\nAntenna origin.\nCorrugated.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.substrate_height",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.substrate_height.html#substrate_height",
        "title": "substrate_height",
        "section": "substrate_height",
        "text": "Substrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw a bowtie antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.html#rectangularpatchprobe",
        "title": "RectangularPatchProbe",
        "section": "RectangularPatchProbe",
        "text": "Manages a rectangular patch antenna with a coaxial probe.\nThis class is accessible through the Hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nSubstrate material.\nIf the material is not defined, a new material, parametrized, is created.\nThe default is \"FR4_epoxy\".\nBoundary type to use. The default is None. Options are\n\"FEBI\", \"PML\", \"Radiation\", and None.\nLength units. The default is \"mm\".\nSubstrate height. The default is 1.575.\nWhether to create a parametrized antenna. The default is True.\nPatch antenna object.\nBalanis, “Microstrip Antennas,” Antenna Theory, 2nd Ed. New York: Wiley, 1997.\nRectangularPatchProbe.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nRectangularPatchProbe.create_lattice_pair([...])\nCreate a lattice pair box.\nRectangularPatchProbe.duplicate_along_line(vector)\nDuplicate the object along a line.\nRectangularPatchProbe.init_model()\nCreate a radiation boundary.\nRectangularPatchProbe.model_disco()\nModel in PyDiscovery.\nRectangularPatchProbe.model_hfss()\nDraw rectangular patch antenna with coaxial probe.\nRectangularPatchProbe.set_variables_in_hfss([...])\nCreate HFSS design variables.\nRectangularPatchProbe.setup_disco()\nSet up the model in PyDiscovery.\nRectangularPatchProbe.setup_hfss()\nSet up an antenna in HFSS.\nRectangularPatchProbe.synthesis()\nAntenna synthesis.\nRectangularPatchProbe.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nRectangularPatchProbe.antenna_type\n\nRectangularPatchProbe.coordinate_system\nReference coordinate system.\nRectangularPatchProbe.frequency\nCenter frequency.\nRectangularPatchProbe.frequency_unit\nFrequency units.\nRectangularPatchProbe.length_unit\nLength unit.\nRectangularPatchProbe.material\nSubstrate material.\nRectangularPatchProbe.material_properties\nSubstrate material properties.\nRectangularPatchProbe.name\nAntenna name.\nRectangularPatchProbe.origin\nAntenna origin.\nRectangularPatchProbe.outer_boundary\nOuter boundary.\nRectangularPatchProbe.substrate_height\nSubstrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/index",
        "href": "toolkit/index.html#api-reference",
        "title": "API reference",
        "section": "API reference",
        "text": "This section provides descriptions of the two APIs available for the AEDT Antenna Toolkit:\nToolkit API: Contains the Toolkit class, which provides methods for\ncontrolling the toolkit workflow. This API provides methods\nfor synthesizing and creating an antenna. You use the Toolkit API at the\ntoolkit level.\nAntenna API: Contains classes for all antenna types available in the toolkit.\nYou use the Antenna API at the model level."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.wg",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.wg.html#wg",
        "title": "wg",
        "section": "wg",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Substrate material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#antenna-toolkit-example",
        "title": "Antenna toolkit example",
        "section": "Antenna toolkit example",
        "text": "This example demonstrates how to use the ToolkitBackend class. It initiates AEDT through PyAEDT, sets up an empty HFSS design, and proceeds to create the antenna.\nSet AEDT version.\nSet non-graphical mode.\nInitialize the toolkit.\nCreate antenna object.\nModify resonance frequency and modify parameters with the set_properties() method.\nModify resonance frequency with properties directly.\nLaunch a new AEDT session in a thread.\nWait for the toolkit thread to be idle and ready to accept a new task.\nCreate an HFSS design.\nSet create_setup property.\nCreate antenna and set up in HFSS.\nThe AEDT Antenna Toolkit API does not allow the creation of more than one antenna. However, you can use the antenna model’s API to create more than one antenna.\nMove antenna X position\nMove antenna X position to origin\nRelease AEDT.\nPlot exported files\n[1]:\nimport sys\nimport tempfile\n[2]:\nfrom ansys.aedt.core import generate_unique_project_name\nfrom ansys.aedt.core.generic.farfield_visualization import FfdSolutionData\n[3]:\nfrom ansys.aedt.toolkits.antenna.backend.api import ToolkitBackend\nfrom ansys.aedt.toolkits.antenna.backend.models import properties\n[4]:\naedt_version = \"2024.2\"\n[5]:\nnon_graphical = True\n[6]:\ntemp_dir = tempfile.TemporaryDirectory(suffix=\"_ansys\")\nproject_name = generate_unique_project_name(root_name=temp_dir.name, project_name=\"antenna_toolkit\")\n[7]:\nproperties.aedt_version = aedt_version\nproperties.non_graphical = non_graphical\nproperties.active_project = project_name\n[8]:\ntoolkit_api = ToolkitBackend()\n[9]:\nprint(toolkit_api.available_antennas)\n[10]:\nbackend_properties = toolkit_api.get_properties()\nfrequency = backend_properties[\"antenna\"][\"synthesis\"][\"frequency\"]\nfrequency_units = backend_properties[\"antenna\"][\"synthesis\"][\"frequency_unit\"]\nlength_unit = backend_properties[\"antenna\"][\"synthesis\"][\"length_unit\"]\n[11]:\nproperties.antenna.synthesis.length_unit = \"cm\"\n[12]:\nantenna_parameters_1 = toolkit_api.get_antenna(\"RectangularPatchProbe\", synth_only=True)\n[13]:\nprint(\n    \"Patch X length: {}{} at {}{}\".format(\n        str(antenna_parameters_1[\"patch_x\"]),\n        length_unit,\n        frequency,\n        frequency_units,\n    )\n)\n[14]:\nnew_frequency1 = 12.0\nnew_properties = {\"frequency\": new_frequency1}\ntoolkit_api.set_properties(new_properties)\n[14]:\n[15]:\nantenna_parameters_2 = toolkit_api.get_antenna(\"RectangularPatchProbe\", synth_only=True)\n[16]:\nprint(\n    \"Patch X length: {}{} at {}{}\".format(\n        str(antenna_parameters_2[\"patch_x\"]),\n        length_unit,\n        new_frequency1,\n        frequency_units,\n    )\n)\n[17]:\nnew_frequency2 = 15.0\nproperties.antenna.synthesis.frequency = new_frequency2\n[18]:\nantenna_parameters_3 = toolkit_api.get_antenna(\"RectangularPatchProbe\", synth_only=True)\n[19]:\nprint(\n    \"Patch X length: {}{} at {}{}\".format(\n        str(antenna_parameters_3[\"patch_x\"]),\n        length_unit,\n        new_frequency2,\n        frequency_units,\n    )\n)\n[20]:\nthread_msg = toolkit_api.launch_thread(toolkit_api.launch_aedt)\n[21]:\nidle = toolkit_api.wait_to_be_idle()\nif not idle:\n    print(\"AEDT not initialized.\")\n    sys.exit()\n[22]:\ntoolkit_api.connect_design(\"HFSS\")\n[22]:\n[23]:\nproperties.antenna.setup.create_setup = True\nproperties.antenna.synthesis.outer_boundary = \"Radiation\"\n[24]:\nantenna_parameter = toolkit_api.get_antenna(\"RectangularPatchProbe\")\n[25]:\nnew_antenna = toolkit_api.get_antenna(\"BowTie\")\n[26]:\nprint(new_antenna)\n[27]:\ntoolkit_api.update_hfss_parameters(\"pos_x\", \"20\")\n[27]:\n[28]:\ntoolkit_api.connect_design()\n[28]:\n[29]:\ntoolkit_api.aedtapp.modeler.fit_all()\n[30]:\ntoolkit_api.release_aedt(False, False)\n[30]:\n[31]:\ntoolkit_api.update_hfss_parameters(\"pos_x\", \"0\")\n[31]:\n[32]:\ntoolkit_api.analyze()\n[32]:\n[33]:\nscattering_data = toolkit_api.scattering_results()\n[34]:\nfrequency_str = str(properties.antenna.synthesis.frequency) + properties.antenna.synthesis.frequency_unit\nfarfield_metadata, farfield_frequency = toolkit_api.export_farfield(\n    frequencies=frequency_str, sphere=\"3D\", encode=False\n)\n[35]:\nfiles = toolkit_api.export_aedt_model(encode=False)\n[36]:\ntoolkit_api.release_aedt(True, True)\n[36]:\n[37]:\nfrom ansys.aedt.core.generic.plot import ModelPlotter\n[38]:\nmodel = ModelPlotter()\nfor file in files:\n    model.add_object(file[0], file[1], file[2])\n[39]:\nmodel.plot(show=False)\n[40]:\nfarfield_data = FfdSolutionData(farfield_metadata)\n[41]:\ndata = farfield_data.plot_3d(show=False)\n[42]:\ntemp_dir.cleanup()"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#perform-required-imports",
        "title": "Antenna toolkit example > Perform required imports",
        "section": "Perform required imports",
        "text": "[1]:\nimport sys\nimport tempfile\n[2]:\nfrom ansys.aedt.core import generate_unique_project_name\nfrom ansys.aedt.core.generic.farfield_visualization import FfdSolutionData\n[3]:\nfrom ansys.aedt.toolkits.antenna.backend.api import ToolkitBackend\nfrom ansys.aedt.toolkits.antenna.backend.models import properties"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#set-aedt-version",
        "title": "Antenna toolkit example > Set AEDT version",
        "section": "Set AEDT version",
        "text": "Set AEDT version.\n[4]:\naedt_version = \"2024.2\""
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#set-non-graphical-mode",
        "title": "Antenna toolkit example > Set non-graphical mode",
        "section": "Set non-graphical mode",
        "text": "Set non-graphical mode.\n[5]:\nnon_graphical = True"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#create-temporary-directory",
        "title": "Antenna toolkit example > Create temporary directory",
        "section": "Create temporary directory",
        "text": "[6]:\ntemp_dir = tempfile.TemporaryDirectory(suffix=\"_ansys\")\nproject_name = generate_unique_project_name(root_name=temp_dir.name, project_name=\"antenna_toolkit\")"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#set-default-properties",
        "title": "Antenna toolkit example > Set default properties",
        "section": "Set default properties",
        "text": "[7]:\nproperties.aedt_version = aedt_version\nproperties.non_graphical = non_graphical\nproperties.active_project = project_name"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#initialize-toolkit",
        "title": "Antenna toolkit example > Initialize toolkit",
        "section": "Initialize toolkit",
        "text": "Initialize the toolkit.\n[8]:\ntoolkit_api = ToolkitBackend()"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#get-available_antennas",
        "title": "Antenna toolkit example > Get available_antennas",
        "section": "Get available_antennas",
        "text": "[9]:\nprint(toolkit_api.available_antennas)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#get-default-properties",
        "title": "Antenna toolkit example > Get default properties",
        "section": "Get default properties",
        "text": "[10]:\nbackend_properties = toolkit_api.get_properties()\nfrequency = backend_properties[\"antenna\"][\"synthesis\"][\"frequency\"]\nfrequency_units = backend_properties[\"antenna\"][\"synthesis\"][\"frequency_unit\"]\nlength_unit = backend_properties[\"antenna\"][\"synthesis\"][\"length_unit\"]"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#modify-default-length-units",
        "title": "Antenna toolkit example > Modify default length units",
        "section": "Modify default length units",
        "text": "[11]:\nproperties.antenna.synthesis.length_unit = \"cm\""
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#create-antenna-object-only-for-synthesis",
        "title": "Antenna toolkit example > Create antenna object only for synthesis",
        "section": "Create antenna object only for synthesis",
        "text": "Create antenna object.\n[12]:\nantenna_parameters_1 = toolkit_api.get_antenna(\"RectangularPatchProbe\", synth_only=True)\n[13]:\nprint(\n    \"Patch X length: {}{} at {}{}\".format(\n        str(antenna_parameters_1[\"patch_x\"]),\n        length_unit,\n        frequency,\n        frequency_units,\n    )\n)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#change-synthesis-frequency",
        "title": "Antenna toolkit example > Change synthesis frequency",
        "section": "Change synthesis frequency",
        "text": "Modify resonance frequency and modify parameters with the set_properties() method.\n[14]:\nnew_frequency1 = 12.0\nnew_properties = {\"frequency\": new_frequency1}\ntoolkit_api.set_properties(new_properties)\n[14]:\n[15]:\nantenna_parameters_2 = toolkit_api.get_antenna(\"RectangularPatchProbe\", synth_only=True)\n[16]:\nprint(\n    \"Patch X length: {}{} at {}{}\".format(\n        str(antenna_parameters_2[\"patch_x\"]),\n        length_unit,\n        new_frequency1,\n        frequency_units,\n    )\n)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#change-synthesis-frequency",
        "title": "Antenna toolkit example > Change synthesis frequency",
        "section": "Change synthesis frequency",
        "text": "Modify resonance frequency with properties directly.\n[17]:\nnew_frequency2 = 15.0\nproperties.antenna.synthesis.frequency = new_frequency2\n[18]:\nantenna_parameters_3 = toolkit_api.get_antenna(\"RectangularPatchProbe\", synth_only=True)\n[19]:\nprint(\n    \"Patch X length: {}{} at {}{}\".format(\n        str(antenna_parameters_3[\"patch_x\"]),\n        length_unit,\n        new_frequency2,\n        frequency_units,\n    )\n)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#initialize-aedt",
        "title": "Antenna toolkit example > Initialize AEDT",
        "section": "Initialize AEDT",
        "text": "Launch a new AEDT session in a thread.\n[20]:\nthread_msg = toolkit_api.launch_thread(toolkit_api.launch_aedt)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#wait-for-the-toolkit-thread-to-be-idle",
        "title": "Antenna toolkit example > Wait for the toolkit thread to be idle",
        "section": "Wait for the toolkit thread to be idle",
        "text": "Wait for the toolkit thread to be idle and ready to accept a new task.\n[21]:\nidle = toolkit_api.wait_to_be_idle()\nif not idle:\n    print(\"AEDT not initialized.\")\n    sys.exit()"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#connect-to-hfss-design",
        "title": "Antenna toolkit example > Connect to HFSS design",
        "section": "Connect to HFSS design",
        "text": "Create an HFSS design.\n[22]:\ntoolkit_api.connect_design(\"HFSS\")\n[22]:"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#create-setup-when-antenna-is-created",
        "title": "Antenna toolkit example > Create setup when antenna is created",
        "section": "Create setup when antenna is created",
        "text": "Set create_setup property.\n[23]:\nproperties.antenna.setup.create_setup = True\nproperties.antenna.synthesis.outer_boundary = \"Radiation\""
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#create-antenna-in-hfss",
        "title": "Antenna toolkit example > Create antenna in HFSS",
        "section": "Create antenna in HFSS",
        "text": "Create antenna and set up in HFSS.\n[24]:\nantenna_parameter = toolkit_api.get_antenna(\"RectangularPatchProbe\")"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#try-to-create-antenna",
        "title": "Antenna toolkit example > Try. to create antenna",
        "section": "Try. to create antenna",
        "text": "The AEDT Antenna Toolkit API does not allow the creation of more than one antenna. However, you can use the antenna model’s API to create more than one antenna.\n[25]:\nnew_antenna = toolkit_api.get_antenna(\"BowTie\")\n[26]:\nprint(new_antenna)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#set-properties",
        "title": "Antenna toolkit example > Set properties",
        "section": "Set properties",
        "text": "Move antenna X position\n[27]:\ntoolkit_api.update_hfss_parameters(\"pos_x\", \"20\")\n[27]:"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#fit-all",
        "title": "Antenna toolkit example > Fit all",
        "section": "Fit all",
        "text": "[28]:\ntoolkit_api.connect_design()\n[28]:\n[29]:\ntoolkit_api.aedtapp.modeler.fit_all()\n[30]:\ntoolkit_api.release_aedt(False, False)\n[30]:"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#set-properties",
        "title": "Antenna toolkit example > Set properties",
        "section": "Set properties",
        "text": "Move antenna X position to origin\n[31]:\ntoolkit_api.update_hfss_parameters(\"pos_x\", \"0\")\n[31]:"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#analyze-design-in-batch-mode",
        "title": "Antenna toolkit example > Analyze design in batch mode",
        "section": "Analyze design in batch mode",
        "text": "[32]:\ntoolkit_api.analyze()\n[32]:"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#get-scattering-results",
        "title": "Antenna toolkit example > Get scattering results",
        "section": "Get scattering results",
        "text": "[33]:\nscattering_data = toolkit_api.scattering_results()"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#get-farfield-results",
        "title": "Antenna toolkit example > Get farfield results",
        "section": "Get farfield results",
        "text": "[34]:\nfrequency_str = str(properties.antenna.synthesis.frequency) + properties.antenna.synthesis.frequency_unit\nfarfield_metadata, farfield_frequency = toolkit_api.export_farfield(\n    frequencies=frequency_str, sphere=\"3D\", encode=False\n)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#get-antenna-model",
        "title": "Antenna toolkit example > Get antenna model",
        "section": "Get antenna model",
        "text": "[35]:\nfiles = toolkit_api.export_aedt_model(encode=False)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#release-aedt",
        "title": "Antenna toolkit example > Release AEDT",
        "section": "Release AEDT",
        "text": "Release AEDT.\n[36]:\ntoolkit_api.release_aedt(True, True)\n[36]:"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#plot-results",
        "title": "Antenna toolkit example > Plot results",
        "section": "Plot results",
        "text": "Plot exported files\n[37]:\nfrom ansys.aedt.core.generic.plot import ModelPlotter\n[38]:\nmodel = ModelPlotter()\nfor file in files:\n    model.add_object(file[0], file[1], file[2])\n[39]:\nmodel.plot(show=False)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#load-far-field",
        "title": "Antenna toolkit example > Load far field",
        "section": "Load far field",
        "text": "[40]:\nfarfield_data = FfdSolutionData(farfield_metadata)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#plot-far-field",
        "title": "Antenna toolkit example > Plot far field",
        "section": "Plot far field",
        "text": "[41]:\ndata = farfield_data.plot_3d(show=False)"
    },
    {
        "objectID": "examples/antenna_toolkit_example",
        "href": "examples/antenna_toolkit_example.html#clean-temporary-directory",
        "title": "Antenna toolkit example > Clean temporary directory",
        "section": "Clean temporary directory",
        "text": "[42]:\ntemp_dir.cleanup()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw elliptical horn antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#getting-started",
        "title": "Getting started",
        "section": "Getting started",
        "text": "This section explains how to install the AEDT Antenna Toolkit.\nLearn how to install the AEDT Antenna Toolkit.\nLearn more about the Antenna wizard and how to use it."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.html#elliptical",
        "title": "Elliptical",
        "section": "Elliptical",
        "text": "Manages an elliptical horn antenna.\nThis class is accessible through the app hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nElliptical horn object.\nC. Balanis, “Aperture Antennas: Analysis, Design, and Applications,”\nModern Antenna Handbook, New York, 2008.\nElliptical.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nElliptical.create_lattice_pair([...])\nCreate a lattice pair box.\nElliptical.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nElliptical.init_model()\nCreate a radiation boundary.\nElliptical.model_disco()\nModel in PyDiscovery.\nElliptical.model_hfss()\nDraw elliptical horn antenna.\nElliptical.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nElliptical.setup_disco()\nSet up in PyDiscovery.\nElliptical.setup_hfss()\nSet up an antenna in HFSS.\nElliptical.synthesis()\nAntenna synthesis.\nElliptical.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nElliptical.antenna_type\n\nElliptical.coordinate_system\nReference coordinate system.\nElliptical.frequency\nCenter frequency.\nElliptical.frequency_unit\nFrequency units.\nElliptical.length_unit\nLength unit.\nElliptical.material\nHorn material.\nElliptical.material_properties\nSubstrate material properties.\nElliptical.name\nAntenna name.\nElliptical.origin\nAntenna origin.\nElliptical.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw conical horn antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/common",
        "href": "toolkit/models/common.html#common",
        "title": "Common",
        "section": "Common",
        "text": "This pages lists common methods available in the Antenna API:\nTransmissionLine([frequency, frequency_unit])\nProvides base methods common to transmission line calculations.\nStandardWaveguide([frequency, frequency_unit])\nProvides base methods common to standard waveguides.\nYou must use these methods from PyAEDT as shown in this example:\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.common import TransmissionLine\n\n# Transmission line calculation\ntl_calc = TransmissionLine(frequency=2)\ntl_calc.stripline_calculator(substrate_height=10, permittivity=2.2, impedance=60)"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up the model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.gain",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.gain.html#gain",
        "title": "gain",
        "section": "gain",
        "text": "Helix expected gain."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#bowtie-antenna-synthesis",
        "title": "Bowtie antenna synthesis",
        "section": "Bowtie antenna synthesis",
        "text": "This example demonstrates how to synthesize a bowtie antenna using the BowTieRounded class. It initiates AEDT through PyAEDT, sets up an empty HFSS design, and proceeds to create the antenna.\nImport the antenna toolkit class and PyAEDT.\nSet AEDT version.\nSet non-graphical mode.\nCreate antenna object.\nModify resonance frequency and modify parameters.\nCreate an empty HFSS design.\nCreate antenna object, change frequency synthesis, create antenna, and set up in HFSS.\nCreate antenna setup.\nChange default name.\nCreate antenna object, change origin parameter in the antenna definition, create antenna, and set up in HFSS.\nPlot geometry with PyVista.\nRelease AEDT.\n[1]:\nimport tempfile\n[2]:\nimport ansys.aedt.core\n[3]:\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie import BowTieRounded\n[4]:\naedt_version = \"2024.2\"\n[5]:\nnon_graphical = True\n[6]:\ntemp_dir = tempfile.TemporaryDirectory(suffix=\"_ansys\")\nproject_name = ansys.aedt.core.generate_unique_project_name(root_name=temp_dir.name, project_name=\"bowtie_example\")\n[7]:\noantenna1 = BowTieRounded(None)\nprint(\n    \"Arm length: {}{} at {}{}\".format(\n        str(oantenna1.synthesis_parameters.arm_length.value),\n        oantenna1.length_unit,\n        oantenna1.frequency,\n        oantenna1.frequency_unit,\n    )\n)\n[8]:\noantenna1.frequency = 12.0\nprint(\n    \"Arm length: {}{} at {}{}\".format(\n        str(oantenna1.synthesis_parameters.arm_length.value),\n        oantenna1.length_unit,\n        oantenna1.frequency,\n        oantenna1.frequency_unit,\n    )\n)\n[9]:\napp = ansys.aedt.core.Hfss(project=project_name, version=aedt_version, non_graphical=non_graphical)\n[10]:\noantenna1 = BowTieRounded(app)\n[11]:\n# Create antenna in HFSS.\noantenna1.model_hfss()\n[12]:\noantenna1.setup_hfss()\n[12]:\n[13]:\noantenna1.name = \"MyAmazingAntenna\"\n[14]:\noantenna2 = BowTieRounded(app, origin=[2, 5, 0], name=\"MyAntenna\")\noantenna2.model_hfss()\noantenna2.setup_hfss()\n[14]:\n[15]:\napp.plot()\n[15]:\n[16]:\napp.release_desktop(True, True)\n[16]:\n[17]:\ntemp_dir.cleanup()"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#perform-required-imports",
        "title": "Bowtie antenna synthesis > Perform required imports",
        "section": "Perform required imports",
        "text": "Import the antenna toolkit class and PyAEDT.\n[1]:\nimport tempfile\n[2]:\nimport ansys.aedt.core\n[3]:\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie import BowTieRounded"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#set-aedt-version",
        "title": "Bowtie antenna synthesis > Set AEDT version",
        "section": "Set AEDT version",
        "text": "Set AEDT version.\n[4]:\naedt_version = \"2024.2\""
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#set-non-graphical-mode",
        "title": "Bowtie antenna synthesis > Set non-graphical mode",
        "section": "Set non-graphical mode",
        "text": "Set non-graphical mode.\n[5]:\nnon_graphical = True"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#create-temporary-directory",
        "title": "Bowtie antenna synthesis > Create temporary directory",
        "section": "Create temporary directory",
        "text": "[6]:\ntemp_dir = tempfile.TemporaryDirectory(suffix=\"_ansys\")\nproject_name = ansys.aedt.core.generate_unique_project_name(root_name=temp_dir.name, project_name=\"bowtie_example\")"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#create-antenna-object-only-for-synthesis",
        "title": "Bowtie antenna synthesis > Create antenna object only for synthesis",
        "section": "Create antenna object only for synthesis",
        "text": "Create antenna object.\n[7]:\noantenna1 = BowTieRounded(None)\nprint(\n    \"Arm length: {}{} at {}{}\".format(\n        str(oantenna1.synthesis_parameters.arm_length.value),\n        oantenna1.length_unit,\n        oantenna1.frequency,\n        oantenna1.frequency_unit,\n    )\n)"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#change-synthesis-frequency",
        "title": "Bowtie antenna synthesis > Change synthesis frequency",
        "section": "Change synthesis frequency",
        "text": "Modify resonance frequency and modify parameters.\n[8]:\noantenna1.frequency = 12.0\nprint(\n    \"Arm length: {}{} at {}{}\".format(\n        str(oantenna1.synthesis_parameters.arm_length.value),\n        oantenna1.length_unit,\n        oantenna1.frequency,\n        oantenna1.frequency_unit,\n    )\n)"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#create-an-empty-hfss-design",
        "title": "Bowtie antenna synthesis > Create an empty HFSS design",
        "section": "Create an empty HFSS design",
        "text": "Create an empty HFSS design.\n[9]:\napp = ansys.aedt.core.Hfss(project=project_name, version=aedt_version, non_graphical=non_graphical)"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#create-antenna-in-hfss",
        "title": "Bowtie antenna synthesis > Create antenna in HFSS",
        "section": "Create antenna in HFSS",
        "text": "Create antenna object, change frequency synthesis, create antenna, and set up in HFSS.\nCreate antenna setup.\nChange default name.\n[10]:\noantenna1 = BowTieRounded(app)\n[11]:\n# Create antenna in HFSS.\noantenna1.model_hfss()\n[12]:\noantenna1.setup_hfss()\n[12]:\n[13]:\noantenna1.name = \"MyAmazingAntenna\""
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#create-antenna-in-hfss",
        "title": "Bowtie antenna synthesis > Create antenna in HFSS",
        "section": "Create antenna in HFSS",
        "text": "Create antenna object, change origin parameter in the antenna definition, create antenna, and set up in HFSS.\n[14]:\noantenna2 = BowTieRounded(app, origin=[2, 5, 0], name=\"MyAntenna\")\noantenna2.model_hfss()\noantenna2.setup_hfss()\n[14]:"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#plot-hfss-model",
        "title": "Bowtie antenna synthesis > Plot HFSS model",
        "section": "Plot HFSS model",
        "text": "Plot geometry with PyVista.\n[15]:\napp.plot()\n[15]:"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#release-aedt",
        "title": "Bowtie antenna synthesis > Release AEDT",
        "section": "Release AEDT",
        "text": "Release AEDT.\n[16]:\napp.release_desktop(True, True)\n[16]:"
    },
    {
        "objectID": "examples/create_antenna_simple",
        "href": "examples/create_antenna_simple.html#clean-temporary-directory",
        "title": "Bowtie antenna synthesis > Clean temporary directory",
        "section": "Clean temporary directory",
        "text": "[17]:\ntemp_dir.cleanup()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up the model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.html#pyramidal",
        "title": "Pyramidal",
        "section": "Pyramidal",
        "text": "Manages a pyramidal horn antenna.\nThis class is accessible through the app hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nPyramidal horn object.\nC. Balanis, “Aperture Antennas: Analysis, Design, and Applications,”\nModern Antenna Handbook, New York, 2008.\nPyramidal.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nPyramidal.create_lattice_pair([...])\nCreate a lattice pair box.\nPyramidal.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nPyramidal.init_model()\nCreate a radiation boundary.\nPyramidal.model_disco()\nModel in PyDiscovery.\nPyramidal.model_hfss()\nDraw pyramidal horn antenna.\nPyramidal.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nPyramidal.setup_disco()\nSet up model in PyDiscovery.\nPyramidal.setup_hfss()\nSet up an antenna in HFSS.\nPyramidal.synthesis()\nAntenna synthesis.\nPyramidal.update_synthesis_parameters(new_params)\nUpdate the synthesis parameter from the antenna list.\nPyramidal.antenna_type\n\nPyramidal.coordinate_system\nReference coordinate system.\nPyramidal.frequency\nCenter frequency.\nPyramidal.frequency_unit\nFrequency units.\nPyramidal.length_unit\nLength unit.\nPyramidal.material\nHorn material.\nPyramidal.material_properties\nSubstrate material properties.\nPyramidal.name\nAntenna name.\nPyramidal.origin\nAntenna origin.\nPyramidal.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.serialize_obj_base64",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.serialize_obj_base64.html#serialize_obj_base64",
        "title": "serialize_obj_base64",
        "section": "serialize_obj_base64",
        "text": "Encode a bytes-like object.\nPath to the file to serialize.\nEncoded data."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "getting_started/user_guide",
        "href": "getting_started/user_guide.html#user-guide",
        "title": "User guide",
        "section": "User guide",
        "text": "You have multiple options for installing and launching the AEDT Antenna Toolkit:\nYou can install the toolkit directly in AEDT using an installation script and then launch it as a wizard.\nFor more information, see install-toolkit-AEDT.\nYou can install the toolkit from a Python console and then launch the Antenna wizard.\nFor more information, see install_toolkit_console_ui.\nYou can install the toolkit from a Python console and then use the toolkit’s APIs.\nFor more information, see install_toolkit_console_api.\nYou can install the AEDT Antenna Toolkit directly in AEDT using the base\ninterpreter from the AEDT installation.\nFrom Install from a Python file,\nfollow the steps to install PyAEDT inside AEDT.\nIn AEDT, select Tools > Toolkit > PyAEDT > Console to load the PyAEDT console:\nIn the PyAEDT console, run these commands to add the Antenna Toolkit as a wizard (toolkit UI) in AEDT:\nIn the AEDT toolbar, click the AntennaWizard button to open this wizard in AEDT:\nThe Antenna Toolkit Wizard is connected directly to the AEDT session. For wizard usage information,\nsee ../toolkit/ui.\nYou can install the AEDT Antenna Toolkit in a specific Python environment from the AEDT console.\nIf you have an existing virtual environment, skip step 1.\nIf you have already installed the toolkit in your virtual environment, skip step 2.\nCreate a fresh-clean Python environment and activate it:\nInstall the toolkit from the GitHub repository:\nLaunch the Antenna Toolkit Wizard:\nOn the AEDT Settings tab, create an AEDT session or connect to an existing one:\nFor wizard usage information, see ../toolkit/ui.\nYou can install the toolkit in a specific Python environment and use the toolkit’s APIs.\nThe code example included in this topic shows how to use the APIs at the model level\nand toolkit level.\nIf you have an existing virtual environment, skip step 1.\nIf you have already installed the toolkit in your virtual environment, skip step 2.\nCreate a fresh-clean Python environment and activate it:\nInstall the toolkit from the GitHub repository:\nOpen a Python console in your virtual environment:\nFrom the command line, use the toolkit to create an antenna.\nThis code shows how to launch AEDT, create and synthesize a bowtie\nantenna, and run a simulation in HFSS:\nTo create an antenna from the toolkit level, use the Toolkit\nclass.\nThis code shows how to use the Toolkit\nclass to get available antennas and their properties, open AEDT, update antenna properties,\nand create a bowtie antenna:\ndesktop.add_custom_toolkit(\"AntennaWizard\")\nexit()\n# Create a virtual environment\npython -m venv .venv\n\n# Activate it in a POSIX system\nsource .venv/bin/activate\n\n# Activate it in a Windows CMD environment\n.venv\\Scripts\\activate.bat\n\n# Activate it in Windows PowerShell\n.venv\\Scripts\\Activate.ps1\npython -m pip install pyaedt-toolkits-antenna[all]\npython .venv\\Lib\\site-packages\\ansys\\aedt\\toolkits\\antenna\\run_toolkit.py\n# Create a virtual environment\npython -m venv .venv\n\n# Activate it in a POSIX system\nsource .venv/bin/activate\n\n# Activate it in a Windows CMD environment\n.venv\\Scripts\\activate.bat\n\n# Activate it in Windows PowerShell\n.venv\\Scripts\\Activate.ps1\npython -m pip install pyaedt-toolkits-antenna\npython\n# Import required modules\nfrom ansys.aedt.core import Hfss\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie import BowTie\n\n# Open AEDT and create an HFSS design\naedtapp = Hfss()\n\n# Create antenna object\noantenna1 = BowTie(aedtapp)\n\n# Change frequency\noantenna1.frequency = 12.0\n\n# Create antenna in HFSS\noantenna1.model_hfss()\n\n# Create setup in HFSS\noantenna1.setup_hfss()\n\n# Release AEDT\naedtapp.release_desktop()\n# Import required modules\nimport time\nfrom ansys.aedt.toolkits.antenna.backend.api import ToolkitBackend\n\n# Backend object\ntoolkit = ToolkitBackend()\n\n# Get available antennas\ntoolkit.available_antennas\n\n# Get properties\nproperties = toolkit.get_properties()\n\n# Set properties\nproperties = toolkit.set_properties({\"length_unit\": \"cm\"})\n\n# Launch AEDT in a thread\ntoolkit.launch_aedt()\n\n# Wait until thread is finished\nidle = toolkit.wait_to_be_idle()\n\n# Update antenna properties\nresponse = toolkit.set_properties({\"substrate_height\": 0.1575, \"length_unit\": \"cm\"})\n\n# Create a bowtie antenna\ntoolkit.get_antenna(\"BowTie\")\n\n# Release AEDT\ntoolkit.release_aedt()"
    },
    {
        "objectID": "getting_started/user_guide",
        "href": "getting_started/user_guide.html#install-toolkit-in-aedt-and-launch-the-antenna-wizard",
        "title": "User guide > Install toolkit in AEDT and launch the Antenna wizard",
        "section": "Install toolkit in AEDT and launch the Antenna wizard",
        "text": "You can install the AEDT Antenna Toolkit directly in AEDT using the base\ninterpreter from the AEDT installation.\nFrom Install from a Python file,\nfollow the steps to install PyAEDT inside AEDT.\nIn AEDT, select Tools > Toolkit > PyAEDT > Console to load the PyAEDT console:\nIn the PyAEDT console, run these commands to add the Antenna Toolkit as a wizard (toolkit UI) in AEDT:\nIn the AEDT toolbar, click the AntennaWizard button to open this wizard in AEDT:\nThe Antenna Toolkit Wizard is connected directly to the AEDT session. For wizard usage information,\nsee ../toolkit/ui.\ndesktop.add_custom_toolkit(\"AntennaWizard\")\nexit()"
    },
    {
        "objectID": "getting_started/user_guide",
        "href": "getting_started/user_guide.html#install-toolkit-from-python-console-and-launch-the-antenna-wizard",
        "title": "User guide > Install toolkit from Python console and launch the Antenna wizard",
        "section": "Install toolkit from Python console and launch the Antenna wizard",
        "text": "You can install the AEDT Antenna Toolkit in a specific Python environment from the AEDT console.\nIf you have an existing virtual environment, skip step 1.\nIf you have already installed the toolkit in your virtual environment, skip step 2.\nCreate a fresh-clean Python environment and activate it:\nInstall the toolkit from the GitHub repository:\nLaunch the Antenna Toolkit Wizard:\nOn the AEDT Settings tab, create an AEDT session or connect to an existing one:\nFor wizard usage information, see ../toolkit/ui.\n# Create a virtual environment\npython -m venv .venv\n\n# Activate it in a POSIX system\nsource .venv/bin/activate\n\n# Activate it in a Windows CMD environment\n.venv\\Scripts\\activate.bat\n\n# Activate it in Windows PowerShell\n.venv\\Scripts\\Activate.ps1\npython -m pip install pyaedt-toolkits-antenna[all]\npython .venv\\Lib\\site-packages\\ansys\\aedt\\toolkits\\antenna\\run_toolkit.py"
    },
    {
        "objectID": "getting_started/user_guide",
        "href": "getting_started/user_guide.html#install-toolkit-from-python-console-and-use-the-toolkits-apis",
        "title": "User guide > Install toolkit from Python console and use the toolkit’s APIs",
        "section": "Install toolkit from Python console and use the toolkit’s APIs",
        "text": "You can install the toolkit in a specific Python environment and use the toolkit’s APIs.\nThe code example included in this topic shows how to use the APIs at the model level\nand toolkit level.\nIf you have an existing virtual environment, skip step 1.\nIf you have already installed the toolkit in your virtual environment, skip step 2.\nCreate a fresh-clean Python environment and activate it:\nInstall the toolkit from the GitHub repository:\nOpen a Python console in your virtual environment:\nFrom the command line, use the toolkit to create an antenna.\nThis code shows how to launch AEDT, create and synthesize a bowtie\nantenna, and run a simulation in HFSS:\nTo create an antenna from the toolkit level, use the Toolkit\nclass.\nThis code shows how to use the Toolkit\nclass to get available antennas and their properties, open AEDT, update antenna properties,\nand create a bowtie antenna:\n# Create a virtual environment\npython -m venv .venv\n\n# Activate it in a POSIX system\nsource .venv/bin/activate\n\n# Activate it in a Windows CMD environment\n.venv\\Scripts\\activate.bat\n\n# Activate it in Windows PowerShell\n.venv\\Scripts\\Activate.ps1\npython -m pip install pyaedt-toolkits-antenna\npython\n# Import required modules\nfrom ansys.aedt.core import Hfss\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie import BowTie\n\n# Open AEDT and create an HFSS design\naedtapp = Hfss()\n\n# Create antenna object\noantenna1 = BowTie(aedtapp)\n\n# Change frequency\noantenna1.frequency = 12.0\n\n# Create antenna in HFSS\noantenna1.model_hfss()\n\n# Create setup in HFSS\noantenna1.setup_hfss()\n\n# Release AEDT\naedtapp.release_desktop()\n# Import required modules\nimport time\nfrom ansys.aedt.toolkits.antenna.backend.api import ToolkitBackend\n\n# Backend object\ntoolkit = ToolkitBackend()\n\n# Get available antennas\ntoolkit.available_antennas\n\n# Get properties\nproperties = toolkit.get_properties()\n\n# Set properties\nproperties = toolkit.set_properties({\"length_unit\": \"cm\"})\n\n# Launch AEDT in a thread\ntoolkit.launch_aedt()\n\n# Wait until thread is finished\nidle = toolkit.wait_to_be_idle()\n\n# Update antenna properties\nresponse = toolkit.set_properties({\"substrate_height\": 0.1575, \"length_unit\": \"cm\"})\n\n# Create a bowtie antenna\ntoolkit.get_antenna(\"BowTie\")\n\n# Release AEDT\ntoolkit.release_aedt()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.TransmissionLine.microstrip_calculator",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.TransmissionLine.microstrip_calculator.html#microstrip_calculator",
        "title": "microstrip_calculator",
        "section": "microstrip_calculator",
        "text": "Use the micro strip line calculator to calculate line width and length.\nSubstrate height.\nSubstrate permittivity.\nImpedance. The default is 50.0.\nElectrical length in degrees. The default is 150.0.\nLine width and length."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#examples",
        "title": "Examples",
        "section": "Examples",
        "text": "End-to-end examples show how to use the API of the AEDT Antenna Toolkit.\nThese examples show how to use the different antenna classes:\nThese examples show how to use the ToolkitBackend class:"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#antenna-synthesis",
        "title": "Examples > Antenna synthesis",
        "section": "Antenna synthesis",
        "text": "These examples show how to use the different antenna classes:"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#antenna-toolkit",
        "title": "Examples > Antenna toolkit",
        "section": "Antenna toolkit",
        "text": "These examples show how to use the ToolkitBackend class:"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.set_properties",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.set_properties.html#set_properties",
        "title": "set_properties",
        "section": "set_properties",
        "text": "Assign the passed data to the internal data model.\nDictionary containing the properties to update.\nTuple indicating the success status and a message."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/index",
        "href": "toolkit/models/index.html#antenna-api",
        "title": "Antenna API",
        "section": "Antenna API",
        "text": "The Antenna API contains classes for all antenna types available in the toolkit:\nYou use the Antenna API at the model level from PyAEDT.\nYou can create one or more antennas. An antenna is object-oriented. You can synthesis an\nantenna without AEDT.\nThis code shows how to synthesis an antenna:\nThis code shows how to synthesize and create a model of an antenna in HFSS:\n# Import backend\nfrom ansys.aedt.toolkits.antenna.backend.models.horn import Conical\n\n# Synthesize antenna\noantenna1 = Conical()\noantenna1.frequency = 12.0\n# Import HFSS\nfrom ansys.aedt.core import Hfss\n\n# Import backend\nfrom ansys.aedt.toolkits.antenna.backend.models.horn import Conical\n\n# Synthesize antenna\naedtapp = Hfss()\n\n# Create antenna\noantenna1 = Conical(app)\noantenna1.model_hfss()\noantenna1.setup_hfss()\n...\naedtapp.release_desktop()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.html#rectangularpatchedge",
        "title": "RectangularPatchEdge",
        "section": "RectangularPatchEdge",
        "text": "Manages a rectangular patch edge antenna.\nThis class is accessible through the Hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nSubstrate material. If the material is not defined,\na new material, parametrized, is created.\nThe default is \"FR4_epoxy\".\nBoundary type to use. The default is None. Options are\n\"FEBI\", \"PML\", \"Radiation\", and None.\nLength units. The default is \"mm\".\nSubstrate height. The default is 1.575.\nWhether to create a parametrized antenna. The default is True.\nPatch antenna object.\nBalanis, “Microstrip Antennas,” Antenna Theory, 2nd Ed. New York: Wiley, 1997.\nRectangularPatchEdge.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nRectangularPatchEdge.create_lattice_pair([...])\nCreate a lattice pair box.\nRectangularPatchEdge.duplicate_along_line(vector)\nDuplicate the object along a line.\nRectangularPatchEdge.init_model()\nCreate a radiation boundary.\nRectangularPatchEdge.model_disco()\nModel in PyDiscovery.\nRectangularPatchEdge.model_hfss()\nDraw a rectangular patch edge antenna inset fed.\nRectangularPatchEdge.set_variables_in_hfss([...])\nCreate HFSS design variables.\nRectangularPatchEdge.setup_disco()\nSet up the model in PyDiscovery.\nRectangularPatchEdge.setup_hfss()\nSet up an antenna in HFSS.\nRectangularPatchEdge.synthesis()\nAntenna synthesis.\nRectangularPatchEdge.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nRectangularPatchEdge.antenna_type\n\nRectangularPatchEdge.coordinate_system\nReference coordinate system.\nRectangularPatchEdge.frequency\nCenter frequency.\nRectangularPatchEdge.frequency_unit\nFrequency units.\nRectangularPatchEdge.length_unit\nLength unit.\nRectangularPatchEdge.material\nSubstrate material.\nRectangularPatchEdge.material_properties\nSubstrate material properties.\nRectangularPatchEdge.name\nAntenna name.\nRectangularPatchEdge.origin\nAntenna origin.\nRectangularPatchEdge.outer_boundary\nOuter boundary.\nRectangularPatchEdge.substrate_height\nSubstrate height."
    },
    {
        "objectID": "toolkit/api",
        "href": "toolkit/api.html#toolkit-api",
        "title": "Toolkit API",
        "section": "Toolkit API",
        "text": "The Toolkit API contains the Toolkit class, which provides methods for\ncontrolling the toolkit workflow. This API provides methods\nfor synthesizing and creating an antenna. You use the Toolkit API at the\ntoolkit level.\nThe common methods for creating an AEDT session or connecting to an existing AEDT session are provided by the\nCommon PyAEDT toolkit library.\nToolkitBackend()\nProvides methods for controlling the toolkit workflow.\nYou can use the Toolkit API as shown in this example:\n# Import required modules for the example\nimport time\n\n# Import backend\nfrom ansys.aedt.toolkits.template.backend.api import ToolkitBackend\n\n# Initialize generic service\ntoolkit_api = Toolkit()\n\n# Load default properties from a JSON file\nproperties = toolkit_api.get_properties()\n\n# Set properties\nnew_properties = {\"aedt_version\": \"2023.1\"}\ntoolkit_api.set_properties(new_properties)\nproperties = toolkit_api.get_properties()\n\n# Launch AEDT\nthread_msg = toolkit_api.launch_thread(toolkit_api.launch_aedt)\n\n# Wait until thread is finished\nidle = toolkit_api.wait_to_be_idle()\nif not idle:\n    print(\"AEDT not initialized.\")\n    sys.exit()\n\n# Create geometry\ntoolkit_api.connect_design(\"HFSS\")\n\n# Create setup when antenna is created\nproperties.antenna.setup.create_setup = True\nproperties.antenna.synthesis.outer_boundary = \"Radiation\"\n\n# Generate antenna\nantenna_parameter = toolkit_api.get_antenna(\"RectangularPatchProbe\")\n\n# Release AEDT\ntoolkit_api.release_aedt()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Substrate material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.stop_frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.stop_frequency.html#stop_frequency",
        "title": "stop_frequency",
        "section": "stop_frequency",
        "text": "Stop frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.scattering_results",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.scattering_results.html#scattering_results",
        "title": "scattering_results",
        "section": "scattering_results",
        "text": "Get antenna scattering results.\nTrue when successful, False when failed."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw an axial mode antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw pyramidal horn antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Substrate material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.html#axialmode",
        "title": "AxialMode",
        "section": "AxialMode",
        "text": "Manages an axial mode helix antenna.\nThis class is accessible through the Hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHelix material. If the material is not defined, a new material,\nparametrized, is defined. The default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna. The default is True.\nAntenna object.\nC. Balanis, “Wideband and Travelling-Wave Antennas,”\nModern Antenna Handbook, New York, 2008.\nAxialMode.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nAxialMode.create_lattice_pair([...])\nCreate a lattice pair box.\nAxialMode.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nAxialMode.init_model()\nCreate a radiation boundary.\nAxialMode.model_disco()\nModel in PyDiscovery.\nAxialMode.model_hfss()\nDraw an axial mode antenna.\nAxialMode.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nAxialMode.setup_disco()\nSet up model in PyDiscovery.\nAxialMode.setup_hfss()\nSet up an antenna in HFSS.\nAxialMode.synthesis()\nAntenna synthesis.\nAxialMode.update_synthesis_parameters(new_params)\nUpdate the synthesis parameter from the antenna list.\nAxialMode.antenna_type\n\nAxialMode.coordinate_system\nReference coordinate system.\nAxialMode.direction\nHelix direction.\nAxialMode.feeder_length\nHelix feeder length.\nAxialMode.frequency\nCenter frequency.\nAxialMode.frequency_unit\nFrequency units.\nAxialMode.gain\nHelix expected gain.\nAxialMode.length_unit\nLength unit.\nAxialMode.material\nHelix material.\nAxialMode.name\nAntenna name.\nAxialMode.origin\nAntenna origin.\nAxialMode.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.feeder_length",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.feeder_length.html#feeder_length",
        "title": "feeder_length",
        "section": "feeder_length",
        "text": "Helix feeder length."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.waveguide_list",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.waveguide_list.html#waveguide_list",
        "title": "waveguide_list",
        "section": "waveguide_list",
        "text": "Standard waveguide list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.connect_design",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.connect_design.html#connect_design",
        "title": "connect_design",
        "section": "connect_design",
        "text": "Connect to an application design.\nIf a design exists, this method uses the active project and design. If a design does not exist,\nthis method creates a design of the specified type. If no application is specified, the default is \"HFSS\".\nAEDT application name. Options are:\n\"Circuit\"\n\"EMIT\"\n\"HFSS\"\n\"HFSS3DLayout\"\n\"Icepak\"\n\"Maxwell2D\"\n\"Maxwell3D\"\n\"Q2D\"\n\"Q3D\"\n\"Rmxprt\"\n\"TwinBuilder\"\n\"Mechanical\"\nReturns True if the connection to a design is successful, False otherwise."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.export_farfield",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.export_farfield.html#export_farfield",
        "title": "export_farfield",
        "section": "export_farfield",
        "text": "Export far field data and then encode the file if the encode parameter is enabled.\nFrequency value or list of frequencies to compute far field data. The default is None, in which case\nall available frequencies are computed.\nName of the setup to use. The default is None, in which case nominal_adaptive is used.\nInfinite sphere to use. The default is None, in which case an existing sphere is used or a new\none is created.\nVariation dictionary.\nWhether to encode the file. The default is True.\nList of eep files or encoded data."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Helix material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model the bowtie antenna in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "getting_started/installation",
        "href": "getting_started/installation.html#installation",
        "title": "Installation",
        "section": "Installation",
        "text": "The AEDT Antenna Toolkit can be installed like any other open source package.\nYou can either install both the backend and user interface (UI) methods or install only the backend methods.\nTo install both the backend and UI methods, run this command:\nIf you only need the common API, install only the backend methods with this\ncommand:\nTo install the toolkit offline, you can use a wheelhouse.\nOn the Releases page, you can find the wheelhouses for\nspecific release in its asserts and download the wheelhouse.\nYou can then install the toolkit with this command:\nYou can also install the toolkit using the toolkit manager. For more information,\nsee the toolkit manager (TBD).\npip install pyaedt-toolkits-antenna[all]\npip install pyaedt-toolkits-antenna\npip install --no-cache-dir --no-index --find-links=<path_to_wheelhouse>/ansys-aedt-toolkits-antenna-v0.1.3-wheelhouse-windows-latest-3.10 ansys_aedt_toolkits_antenna"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Substrate material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.launch_thread",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.launch_thread.html#launch_thread",
        "title": "launch_thread",
        "section": "launch_thread",
        "text": "Launch the thread."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/ui",
        "href": "toolkit/ui.html#antenna-wizard",
        "title": "Antenna wizard",
        "section": "Antenna wizard",
        "text": "This section describes how to use the Antenna wizard. It assumes that you have already launched the\nwizard from either the AEDT menu or AEDT console. For toolkit installation and wizard\nlaunching information, see these topics:\ninstall-toolkit-AEDT\ninstall_toolkit_console_ui\nOn the Settings tab, specify settings for either creating an AEDT session or\nconnecting to an existing AEDT session.\nIf the Antenna Toolkit Wizard is launched from AEDT, the Settings tab does not appear\nbecause the toolkit is directly connected to the specific AEDT session.\nThe wizard has a progress circle and a logger box, where you can see the status of every operation.\nYou can choose different antennas from the Antenna catalog menu to load the antennas\ntemplate.\nFor example, if you select Antennas > Bowtie > Bowtie Normal,\nthe central page is updated to the Synthesis page and it shows the antenna template:\nYou have two options: Synthesis and Generate.\nThe Generate button is unavailable if the wizard is not connected to AEDT.\nThe Synthesis button is for performing the synthesis of the antenna. A connection to AEDT\nYou can see the parameters that control the antenna geometry. Additionally, you can do as many\nsyntheses as you want and even change the antenna template.\nThe Generate button is for creating an HFSS model. It uses the 3D Component,\nCreate Hfss Setup, and Lattice pair checkboxes along with the Sweep Bandwidth % option\nIt also uses the length and frequency unit to perform the HFSS setup.\nDescriptions follow for how to use the checkboxes on the Design tab:\nIf you select the 3D Component checkbox, the toolkit creates the antenna and replaces it\nwith a 3D component.\nIf you select the Generate checkbox, the toolkit automatically creates the boundaries,\nexcitations, and ports needed to simulate the antenna. Once you create an HFSS model, you cannot\ncreate another antenna. Both the Synthesis and Generate buttons become unavailable.\nIf you want to create another antenna, you must restart the toolkit.\nIf you select the Lattice pair checkbox, the toolkit creates a unit cell assigning a\nlattice pair boundary.\nOnce you create an antenna, the Synthesis tab displays an interactive 3D model rather than\nthe image of the antenna template:\nIf AEDT is launched in non-graphical mode, you can still see the generated model.\nIn the wizard, you can modify the parameters interactively, watching both the HFSS model and the\ninteractive 3D plot in the wizard change.\nFinally, on the wizard’s Analysis tab, you have the Get results button.\nThis second button is unavailable until after you analyze the HFSS design.\nWhen you click Get results, the project is analyzed.\nYou can specify the number of cores to use in the simulation.\nOnce the project is solved, you can click Get results on the Analysis tab to view results."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_design_names",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_design_names.html#get_design_names",
        "title": "get_design_names",
        "section": "get_design_names",
        "text": "Get the design names for a specific project.\nThe first design name returned is the active design.\nList of design names."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Central frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.TransmissionLine",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.TransmissionLine.html#transmissionline",
        "title": "TransmissionLine",
        "section": "TransmissionLine",
        "text": "Provides base methods common to transmission line calculations.\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nTransmission line calculator object.\nTransmissionLine.microstrip_calculator(...)\nUse the micro strip line calculator to calculate line width and length.\nTransmissionLine.stripline_calculator(...[, ...])\nUse the strip line calculator to calculate line width.\nTransmissionLine.suspended_strip_calculator(...)\nUse the suspended strip line calculator to calculate effective permittivity."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.connect_aedt",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.connect_aedt.html#connect_aedt",
        "title": "connect_aedt",
        "section": "connect_aedt",
        "text": "Connect to an existing AEDT session.\nTrue when successful, False when failed."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.find_waveguide",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.find_waveguide.html#find_waveguide",
        "title": "find_waveguide",
        "section": "find_waveguide",
        "text": "Find the closest standard waveguide for the operational frequency.\nOperational frequency.\nInput frequency units. The default is \"GHz\".\nWaveguide name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.TransmissionLine.suspended_strip_calculator",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.TransmissionLine.suspended_strip_calculator.html#suspended_strip_calculator",
        "title": "suspended_strip_calculator",
        "section": "suspended_strip_calculator",
        "text": "Use the suspended strip line calculator to calculate effective permittivity.\nSubstrate in meter.\nDielectric permittivity\nEffective permittivity."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.installed_aedt_version",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.installed_aedt_version.html#installed_aedt_version",
        "title": "installed_aedt_version",
        "section": "installed_aedt_version",
        "text": "Get the installed AEDT versions.\nList of installed AEDT versions."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_properties",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_properties.html#get_properties",
        "title": "get_properties",
        "section": "get_properties",
        "text": "Get the toolkit properties.\nDictionary containing the toolkit properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.substrate_height",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.substrate_height.html#substrate_height",
        "title": "substrate_height",
        "section": "substrate_height",
        "text": "Substrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.substrate_height",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.substrate_height.html#substrate_height",
        "title": "substrate_height",
        "section": "substrate_height",
        "text": "Substrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up the model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Substrate material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.html#eplane",
        "title": "EPlane",
        "section": "EPlane",
        "text": "Manages an E plane horn antenna.\nThis class is accessible through the app hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nE plane horn object.\nC. Balanis, “Aperture Antennas: Analysis, Design, and Applications,”\nModern Antenna Handbook, New York, 2008.\nEPlane.create_3dcomponent([component_file, ...])\nCreate a 3D component of the antenna.\nEPlane.create_lattice_pair([lattice_height, ...])\nCreate a lattice pair box.\nEPlane.duplicate_along_line(vector[, num_clones])\nDuplicate the object along a line.\nEPlane.init_model()\nCreate a radiation boundary.\nEPlane.model_disco()\nModel in PyDiscovery.\nEPlane.model_hfss()\nDraw E plane horn antenna.\nEPlane.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nEPlane.setup_disco()\nSet up model in PyDiscovery.\nEPlane.setup_hfss()\nSet up an antenna in HFSS.\nEPlane.synthesis()\nAntenna synthesis.\nEPlane.update_synthesis_parameters(new_params)\nUpdate the synthesis parameter from the antenna list.\nEPlane.antenna_type\n\nEPlane.coordinate_system\nReference coordinate system.\nEPlane.frequency\nCenter frequency.\nEPlane.frequency_unit\nFrequency units.\nEPlane.length_unit\nLength unit.\nEPlane.material\nHorn material.\nEPlane.material_properties\nSubstrate material properties.\nEPlane.name\nAntenna name.\nEPlane.origin\nAntenna origin.\nEPlane.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.get_waveguide_dimensions",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.get_waveguide_dimensions.html#get_waveguide_dimensions",
        "title": "get_waveguide_dimensions",
        "section": "get_waveguide_dimensions",
        "text": "Get waveguide dimensions.\nWaveguide name.\nDimension units. The default is mm.\nWaveguide dimensions."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.html#quadridged",
        "title": "QuadRidged",
        "section": "QuadRidged",
        "text": "Manages a quad-ridged horn antenna.\nThis class is accessible through the app hfss object [1], [2], [3].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nPyramidal ridged horn object.\nK. L. Walton and V. C. Sundberg, “Broadband ridged horn design,”\nMicrowave J., vol. 4, pp. 96-101, Apr. 1964.\nC. Bruns et al., “Analysis and Simulations of a 1-18 GHz\nBroadband Double-Ridged Horn Antenna,”\nIEEE Electromag. Compat., vol. 45, pp. 55-60, Feb 2003.\nC. Balanis, “Horn Antennas,” Antenna Theory Analysis,\n3rd ed. Hoboken: Wiley, 2005, ch. 13.\nQuadRidged.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nQuadRidged.create_lattice_pair([...])\nCreate a lattice pair box.\nQuadRidged.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nQuadRidged.init_model()\nCreate a radiation boundary.\nQuadRidged.model_disco()\nModel in PyDiscovery.\nQuadRidged.model_hfss()\nDraw conical horn antenna.\nQuadRidged.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nQuadRidged.setup_disco()\nSet up model in PyDiscovery.\nQuadRidged.setup_hfss()\nSet up an antenna in HFSS.\nQuadRidged.synthesis()\nAntenna synthesis.\nQuadRidged.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nQuadRidged.antenna_type\n\nQuadRidged.coordinate_system\nReference coordinate system.\nQuadRidged.frequency\nCenter frequency.\nQuadRidged.frequency_unit\nFrequency units.\nQuadRidged.length_unit\nLength unit.\nQuadRidged.material\nHorn material.\nQuadRidged.material_properties\nSubstrate material properties.\nQuadRidged.name\nAntenna name.\nQuadRidged.origin\nAntenna origin.\nQuadRidged.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.export_aedt_model",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.export_aedt_model.html#export_aedt_model",
        "title": "export_aedt_model",
        "section": "export_aedt_model",
        "text": "Export the model in the OBJ format and then encode the file if the encode parameter is enabled.\nList of objects to export. The default is None, in which case\nevery model object except 3D, vacuum, and air objects are exported.\nFull path of the exported OBJ file.\nThe default is None, in which case the file is exported in the working directory.\nWhether to export the model as a single object. The default is True.\nIf False, the model is exported as a list of objects for each object.\nWhether to export air and vacuum objects. The default is False.\nWhether to encode the file. The default is True.\nList of exported OBJ files or encoded data."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.common.StandardWaveguide.html#standardwaveguide",
        "title": "StandardWaveguide",
        "section": "StandardWaveguide",
        "text": "Provides base methods common to standard waveguides.\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nStandard waveguide object.\nStandardWaveguide.find_waveguide(freq[, units])\nFind the closest standard waveguide for the operational frequency.\nStandardWaveguide.get_waveguide_dimensions(name)\nGet waveguide dimensions.\nStandardWaveguide.waveguide_list\nStandard waveguide list.\nStandardWaveguide.wg\n"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw a conical horn antenna.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.material",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Horn material."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.frequency_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.frequency_unit.html#frequency_unit",
        "title": "frequency_unit",
        "section": "frequency_unit",
        "text": "Frequency units."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/horn",
        "href": "toolkit/models/horn.html#horn",
        "title": "Horn",
        "section": "Horn",
        "text": "This page lists the classes available for horns:\nConical(*args, **kwargs)\nManages a conical horn antenna.\nCorrugated(*args, **kwargs)\nManages a corrugated horn antenna.\nElliptical(*args, **kwargs)\nManages an elliptical horn antenna.\nEPlane(*args, **kwargs)\nManages an E plane horn antenna.\nHPlane(*args, **kwargs)\nManages an H plane horn antenna.\nPyramidal(*args, **kwargs)\nManages a pyramidal horn antenna.\nPyramidalRidged(*args, **kwargs)\nManages a pyramidal ridged horn antenna.\nQuadRidged(*args, **kwargs)\nManages a quad-ridged horn antenna.\nYou must use these methods from PyAEDT as shown in this example:\nimport ansys.aedt.core.Hfss\n\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.horn import Conical\n\naedtapp = Hfss()\n\n# Create antenna\noantenna1 = Conical(app)\noantenna1.frequency = 12.0\noantenna1.model_hfss()\noantenna1.setup_hfss()\n...\naedtapp.release_desktop()"
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.aedt_sessions",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.aedt_sessions.html#aedt_sessions",
        "title": "aedt_sessions",
        "section": "aedt_sessions",
        "text": "Get information for the active AEDT sessions.\nDictionary of AEDT process IDs (PIDS) {AEDT PID: port}.\nIf the PID corresponds to a COM session, the port is set to -1."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.create_lattice_pair",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.create_lattice_pair.html#create_lattice_pair",
        "title": "create_lattice_pair",
        "section": "create_lattice_pair",
        "text": "Create a lattice pair box.\nHeight of the lattice pair box.\nWhether to extend the lattice pair in the bottom side. The default is False.\n3D object."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.start_frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.start_frequency.html#start_frequency",
        "title": "start_frequency",
        "section": "start_frequency",
        "text": "Start frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieSlot.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.create_3dcomponent",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.create_3dcomponent.html#create_3dcomponent",
        "title": "create_3dcomponent",
        "section": "create_3dcomponent",
        "text": "Create a 3D component of the antenna.\nFull path to the A3DCOMP file. The default is the ansys.aedt.core folder.\nName of the component. The default is the antenna name.\nWhether to eplace the antenna with a 3D component. The default is False.\nPath of the 3D component file or\nansys.aedt.core.modeler.components_3d.UserDefinedComponent."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Elliptical.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/helix",
        "href": "toolkit/models/helix.html#helix",
        "title": "Helix",
        "section": "Helix",
        "text": "This pages lists the classes available for helix antennas:\nAxialMode(*args, **kwargs)\nManages an axial mode helix antenna.\nYou must use these methods from PyAEDT as shown in this example:\nfrom ansys.aedt.core import Hfss\n\nfrom ansys.aedt.toolkits.antenna.backend.antenna_models.helix import AxialMode\n\naedtapp = Hfss()\n\n# Create antenna\noantenna1 = AxialMode(app)\noantenna1.model_hfss()\noantenna1.setup_hfss()\n...\naedtapp.release_desktop()"
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.antenna_type",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.antenna_type.html#antenna_type",
        "title": "antenna_type",
        "section": "antenna_type",
        "text": ""
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.PyramidalRidged.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_project_name",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.get_project_name.html#get_project_name",
        "title": "get_project_name",
        "section": "get_project_name",
        "text": "Get the project name from the project path.\nProject name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.setup_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.setup_hfss.html#setup_hfss",
        "title": "setup_hfss",
        "section": "setup_hfss",
        "text": "Set up an antenna in HFSS."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.update_synthesis_parameters",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.update_synthesis_parameters.html#update_synthesis_parameters",
        "title": "update_synthesis_parameters",
        "section": "update_synthesis_parameters",
        "text": "Update the synthesis parameter from the antenna list."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.length_unit",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.length_unit.html#length_unit",
        "title": "length_unit",
        "section": "length_unit",
        "text": "Length unit."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.material_properties",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.material_properties.html#material_properties",
        "title": "material_properties",
        "section": "material_properties",
        "text": "Substrate material properties."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.setup_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.setup_disco.html#setup_disco",
        "title": "setup_disco",
        "section": "setup_disco",
        "text": "Set up in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Pyramidal.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieRounded.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.conical_spiral.Archimedean.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw a conical archimidean spiral antenna.\nThis method uses the user-defined model from the AEDT installation.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw rectangular patch antenna with coaxial probe.\nOnce the antenna is created, this method will not be used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.origin",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.QuadRidged.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Antenna origin."
    },
    {
        "objectID": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.update_hfss_parameters",
        "href": "toolkit/_autosummary/ansys.aedt.toolkits.antenna.backend.api.ToolkitBackend.update_hfss_parameters.html#update_hfss_parameters",
        "title": "update_hfss_parameters",
        "section": "update_hfss_parameters",
        "text": "Update parameters in HFSS.\nKey.\nValue.\nTrue when successful, False when failed."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.model_disco",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.model_disco.html#model_disco",
        "title": "model_disco",
        "section": "model_disco",
        "text": "Model in PyDiscovery. To be implemented."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.init_model",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchProbe.init_model.html#init_model",
        "title": "init_model",
        "section": "init_model",
        "text": "Create a radiation boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.set_variables_in_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchEdge.set_variables_in_hfss.html#set_variables_in_hfss",
        "title": "set_variables_in_hfss",
        "section": "set_variables_in_hfss",
        "text": "Create HFSS design variables."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.bowtie.BowTieNormal.html#bowtienormal",
        "title": "BowTieNormal",
        "section": "BowTieNormal",
        "text": "Manages a bowtie antenna.\nThis class is accessible through the Hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nSubstrate material. If a material is not defined, a new\nmaterial, parametrized, is defined. The default is \"FR4_epoxy\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nSubstrate height. The default is 1.575.\nWhether to create a parametrized antenna. The default is True.\nBowtie antenna object.\nC. Balanis, “Wideband and Travelling-Wave Antennas,”\nModern Antenna Handbook, New York, 2008.\nBowTieNormal.create_3dcomponent([...])\nCreate a 3D component of the antenna.\nBowTieNormal.create_lattice_pair([...])\nCreate a lattice pair box.\nBowTieNormal.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nBowTieNormal.init_model()\nCreate a radiation boundary.\nBowTieNormal.model_disco()\nModel the bowtie antenna in PyDiscovery.\nBowTieNormal.model_hfss()\nDraw a bowtie antenna.\nBowTieNormal.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nBowTieNormal.setup_disco()\nSet up the model in PyDiscovery.\nBowTieNormal.setup_hfss()\nSet up an antenna in HFSS.\nBowTieNormal.synthesis()\nAntenna synthesis.\nBowTieNormal.update_synthesis_parameters(...)\nUpdate the synthesis parameter from the antenna list.\nBowTieNormal.antenna_type\n\nBowTieNormal.coordinate_system\nReference coordinate system.\nBowTieNormal.frequency\nCenter frequency.\nBowTieNormal.frequency_unit\nFrequency units.\nBowTieNormal.length_unit\nLength unit.\nBowTieNormal.material\nSubstrate material.\nBowTieNormal.material_properties\nSubstrate material properties.\nBowTieNormal.name\nAntenna name.\nBowTieNormal.origin\nAntenna origin.\nBowTieNormal.outer_boundary\nOuter boundary.\nBowTieNormal.substrate_height\nSubstrate height."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.coordinate_system",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.helix.AxialMode.coordinate_system.html#coordinate_system",
        "title": "coordinate_system",
        "section": "coordinate_system",
        "text": "Reference coordinate system."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.model_hfss",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.patch.RectangularPatchInset.model_hfss.html#model_hfss",
        "title": "model_hfss",
        "section": "model_hfss",
        "text": "Draw a rectangular patch antenna inset fed.\nOnce the antenna is created, this method is not used anymore."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.outer_boundary",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.EPlane.outer_boundary.html#outer_boundary",
        "title": "outer_boundary",
        "section": "outer_boundary",
        "text": "Outer boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.frequency",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Corrugated.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "Center frequency."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.synthesis",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.synthesis.html#synthesis",
        "title": "synthesis",
        "section": "synthesis",
        "text": "Antenna synthesis.\nAnalytical parameters."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.name",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.name.html#name",
        "title": "name",
        "section": "name",
        "text": "Antenna name."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.Conical.html#conical",
        "title": "Conical",
        "section": "Conical",
        "text": "Manages a conical horn antenna.\nThis class is accessible through the app hfss object [1].\nCenter frequency. The default is 10.0.\nFrequency units. The default is \"GHz\".\nHorn material. If a material is not defined, a new material, parametrized, is defined.\nThe default is \"pec\".\nBoundary type to use. The default is None. Options are \"FEBI\", \"PML\",\n\"Radiation\", and None.\nLength units. The default is \"mm\".\nWhether to create a parametrized antenna.  The default is True.\nConical horn object.\nC. Balanis, “Aperture Antennas: Analysis, Design, and Applications,”\nModern Antenna Handbook, New York, 2008.\nConical.create_3dcomponent([component_file, ...])\nCreate a 3D component of the antenna.\nConical.create_lattice_pair([...])\nCreate a lattice pair box.\nConical.duplicate_along_line(vector[, ...])\nDuplicate the object along a line.\nConical.init_model()\nCreate a radiation boundary.\nConical.model_disco()\nModel in PyDiscovery.\nConical.model_hfss()\nDraw a conical horn antenna.\nConical.set_variables_in_hfss([not_used])\nCreate HFSS design variables.\nConical.setup_disco()\nSet up in PyDiscovery.\nConical.setup_hfss()\nSet up an antenna in HFSS.\nConical.synthesis()\nAntenna synthesis.\nConical.update_synthesis_parameters(new_params)\nUpdate the synthesis parameter from the antenna list.\nConical.antenna_type\n\nConical.coordinate_system\nReference coordinate system.\nConical.frequency\nCenter frequency.\nConical.frequency_unit\nFrequency units.\nConical.length_unit\nLength unit.\nConical.material\nHorn material.\nConical.material_properties\nSubstrate material properties.\nConical.name\nAntenna name.\nConical.origin\nAntenna origin.\nConical.outer_boundary\nOuter boundary."
    },
    {
        "objectID": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.duplicate_along_line",
        "href": "toolkit/models/_autosummary/ansys.aedt.toolkits.antenna.backend.antenna_models.horn.HPlane.duplicate_along_line.html#duplicate_along_line",
        "title": "duplicate_along_line",
        "section": "duplicate_along_line",
        "text": "Duplicate the object along a line.\nList of [x1 ,y1, z1] coordinates for the vector.\nNumber of clones. The default is 2.\nDictionary with the list of new objects."
    }
]